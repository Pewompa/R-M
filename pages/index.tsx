import Head from 'next/head';
import { useState } from 'react';
import CharacterList from '../components/CharacterList';
import { GetServerSideProps } from 'next';
import { CharacterResults } from '../types';
import Pagination from '../components/Pagination';

export default function Home({ characterList }) {
  const [characters, setCharacters] = useState(characterList);
  const [withLocation] = useState(false);
  const fetchCharacters = async (url: string) => {
    const response = await fetch(url);
    const nextCharacter = await response.json();
    setCharacters(nextCharacter);
  };

  return (
    <div className="container mx-auto">
      <Head>
        <title>R&M</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/rick.png" />
      </Head>
      <header className="mb-19">
        {/* Utilizando <img> porque Image de next pierde un poco de definición */}
        <img
          src="/logos.png"
          alt="image"
          height="700"
          width="700"
          className="mr-auto ml-auto mb-12"
        ></img>
      </header>
      <div className="flex justify-end">
        {characters.info.prev && (
          <button
            className="bg-slate-700 hover:bg-slate-600 text-white font-semi-bold py-2 p px-4 rounded mb-3 mr-3"
            onClick={() => fetchCharacters(characters.info.prev)}
          >
            Prev
          </button>
        )}
        {characters.info.next && (
          <button
            className="bg-slate-700 hover:bg-slate-600 text-white font-semi-bold py-2 px-4 rounded mb-3"
            onClick={() => {
              fetchCharacters(characters.info.next);
            }}
          >
            Next
          </button>
        )}
      </div>
      <div className="wrap">
        {/* Lista de personajes en la página princial */}
        <CharacterList
          characters={characters.results}
          withLocation
        ></CharacterList>
      </div>
      <div className="flex justify-end">
        {characters.info.prev && (
          <button
            className="bg-slate-700 hover:bg-slate-600 text-white font-semi-bold py-2 p px-4 rounded mb-3 mr-3 mt-3"
            onClick={() => fetchCharacters(characters.info.prev)}
          >
            Prev
          </button>
        )}
        {characters.info.next && (
          <button
            className="bg-slate-700 hover:bg-slate-600 text-white font-semi-bold py-2 px-4 rounded mb-3 mt-3 "
            onClick={() => {
              fetchCharacters(characters.info.next);
            }}
          >
            Next
          </button>
        )}
      </div>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const response = await fetch('https://rickandmortyapi.com/api/character/');
  const characterList: CharacterResults = await response.json();
  return {
    props: {
      characterList,
    },
  };
};
